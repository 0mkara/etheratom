'use babel'

import { CompositeDisposable } from 'atom'

let EthJSVM
EthJSVM = require('ethereumjs-vm');

class VM {
	constructor() {
		this.subscriptions = new CompositeDisposable()
		this.vm = new EthJSVM({
			activatePrecompiles: true,
			enableHomestead: true
		})
		this.subscriptions.add(atom.commands.add('atom-workspace', 'eth-interface:compile', () => this.commandInvoked()))
	}

	commandInvoked() {
		this.execute()
	}
	dispose() {
		this.subscriptions.dispose()
	}
	execute() {
		console.log("Executing test VM");
		var code = '7f4e616d65526567000000000000000000000000000000000000000000000000003055307f4e616d6552656700000000000000000000000000000000000000000000000000557f436f6e666967000000000000000000000000000000000000000000000000000073661005d2720d855f1d9976f88bb10c1a3398c77f5573661005d2720d855f1d9976f88bb10c1a3398c77f7f436f6e6669670000000000000000000000000000000000000000000000000000553360455560df806100c56000396000f3007f726567697374657200000000000000000000000000000000000000000000000060003514156053576020355415603257005b335415603e5760003354555b6020353360006000a233602035556020353355005b60007f756e72656769737465720000000000000000000000000000000000000000000060003514156082575033545b1560995733335460006000a2600033545560003355005b60007f6b696c6c00000000000000000000000000000000000000000000000000000000600035141560cb575060455433145b1560d25733ff5b6000355460005260206000f3'
		//code needs to be a buffer
		code = new Buffer(code, 'hex')
		this.vm.runCode({
			code: code,
			gasLimit: new Buffer('ffffffff', 'hex')
		}, function(err, results) {
			console.log('returned: ' + results.return.toString('hex'));
		})
	}
}
export { VM }
